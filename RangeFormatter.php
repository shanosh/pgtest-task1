<?php
/**
 * Range formatter accepts a positive integer range and generates a formatted output
 * 
 * @author shanosh
 */
class RangeFormatter{
	
	/**
	 * Stores the range generated by start and end values
	 * 
	 * @var Array
	 */
	protected $range;
	
	/**
	 * Stores the multipliers and its lables
	 * 
	 * @var Array
	 */
	protected $keywords = array(3 => 'Fizz', 5 => 'Buzz');
	
	/**
	 * Stores the generated formatted output
	 * 
	 * @var String
	 */
	public $output;
	
	/**
	 * The constructor accepts a positive integer range.
	 * It will throw out an exception if else
	 *
	 * @param Int $start starting number of the range
	 * @param Int $end ending number of the range
	 */
	public function __construct($start, $end){	
		
		//check if both numbers are positive integers and that end number is greater
		if(!is_int($start) 
			|| !is_int($end)
			|| $start < 0
			|| $end < 0
			|| $start > $end
		){
			throw new Exception("Invalid parameters");	
		}
	
	
		//set start and end properties
		$this->range = range($start, $end);

	
	}
		
	
	/**
	 * Generates the formatted output based on the range
	 * 
	 * @return String generated string
	 */
	public function generateOutput(){
		
		//if the range is not set just return an empty string
		if(empty($this->range)){
			return $this->output = '';
		}
		
		//return generated output
		foreach ($this->range as $n){
			$printInt = true;
				
			foreach($this->keywords as $multiplier => $label){
				if($n % $multiplier == 0){
					$this->output .= $label;
					$printInt = false;
				}
			}
				
			if($printInt){
				$this->output .= $n;
			}
				
			$this->output .= ' ';
		}
		
		return trim($this->output);
		
	}
	
	/**
	 * Prints the output
	 * 
	 * @return void
	 */
	public function display(){		
		
		echo $this->output;
	}
	
	
}